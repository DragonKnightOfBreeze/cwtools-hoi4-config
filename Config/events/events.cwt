types = {
	## graph_related_types = {}
	type[event] = {
		path = "game/events"
		file_extension = .txt
		name_field = id

		subtype[hidden] = {
			hidden = yes
		}

		## group = event_type
		## type_key_filter = event
		## push_scope = any
		subtype[scopeless] = {}
		## group = event_type
		## type_key_filter = country_event
		## push_scope = country
		subtype[country] = {}
		## group = event_type
		## type_key_filter = state_event
		## replace_scope = { this = state root = country }
		subtype[state] = {}
		## group = event_type
		## type_key_filter = news_event
		## push_scope = country
		subtype[news] = {}
		## group = event_type
		## type_key_filter = unit_leader_event
		## push_scope = unit_leader
		subtype[unit_leader] = {}
		## group = event_type
		## type_key_filter = operative_leader_event
		## push_scope = operative
		subtype[operative_leader] = {}

		localisation = {
			subtype[!hidden] = {
				title = title
				desc = desc
			}
		}
		images = {
			subtype[!hidden] = {
				## primary
				## optional
				picture = picture # <sprite>, can be triggered or/and multiple
			}
		}
	}
}

event = {
	id = scalar
	## cardinality = 0..inf
	title = localisation
	## cardinality = 0..inf
	title = {
		## cardinality = ~1..1
		trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		text = localisation
	}
	## cardinality = 0..1
	## severity = warning
	picture = <sprite>
	## cardinality = 0..inf
	desc = localisation
	## cardinality = 0..inf
	desc = {
		## cardinality = ~1..1
		trigger = {
			alias_name[trigger] = alias_match_left[trigger]
		}
		text = localisation
	}
	## cardinality = 0..1
	hidden = yes
	## error_if_only_match = This is the default value and can be omitted
	## severity = info
	## cardinality = 0..1
	hidden = no

	## cardinality = 0..1
	major = yes
	## error_if_only_match = This is the default value and can be omitted
	## severity = info
	## cardinality = 0..1
	major = no

	## cardinality = 0..1
	fire_only_once = yes
	## error_if_only_match = This is the default value and can be omitted
	## severity = info
	## cardinality = 0..1
	fire_only_once = no

	## cardinality = 0..1
	is_triggered_only = yes
	## error_if_only_match = This is the default value and can be omitted
	## severity = info
	## cardinality = 0..1
	is_triggered_only = no

	## cardinality = 0..1
	minor_flavor = yes
	## error_if_only_match = This is the default value and can be omitted
	## severity = info
	## cardinality = 0..1
	minor_flavor = no

	## cardinality = 0..1
	timeout_days = int

	## cardinality = 0..1
	trigger = {
		## cardinality = ~1..inf
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	show_major = {
		## cardinality = ~1..inf
		alias_name[trigger] = alias_match_left[trigger]
	}
	## cardinality = 0..1
	fire_for_sender = bool
	## cardinality = 0..1
	mean_time_to_happen = {
		## cardinality = 0..1
		days = int
		## cardinality = 0..1
		months = int
		## cardinality = 0..1
		years = int
		alias_name[modifier_rule] = alias_match_left[modifier_rule]
	}
	## cardinality = 0..inf
	immediate = {
		## cardinality = ~1..inf
		alias_name[effect] = alias_match_left[effect]
	}
	## cardinality = 0..inf
	option = {
		## cardinality = 0..1
		name = localisation
		## cardinality = 0..1
		trigger = {
			## cardinality = ~1..inf
			alias_name[trigger] = alias_match_left[trigger]
		}
		alias_name[effect] = alias_match_left[effect]
		## cardinality = 0..1
		ai_chance = {
			## cardinality = 0..inf
			base = variable_field
			## error_if_only_match = Events - ai_chance - use `base` instead of `factor`
			## severity = info
			## cardinality = 0..inf
			factor = variable_field
			alias_name[modifier_rule] = alias_match_left[modifier_rule]
		}
	}
}
